; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

; Your development folder
#define MyDevelDir "C:\Users\patrice\Documents\Development\"

#define MyAppName "aqic"
#define MyAppVersion "0.0.0"
#define MyAppPublisher "Opendata air quality index browser"
#define MyAppExeName "aqic.exe"
#define MyAppSystem "win32"
#define MyAppPlateform "x64"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{692680BE-724E-40EB-A309-DB2D2CDAB84C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={commonpf}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename={#MyAppName}-{#MyAppSystem}{#MyAppPlateform}-{#MyAppVersion}
Compression=lzma
SolidCompression=yes
UninstallDisplayIcon={app}\{#MyAppExeName}
ArchitecturesInstallIn64BitMode=x64
OutputDir=Is-Installer

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "{#MyDevelDir}\{#MyAppName}\{#MyAppName}\install\windows\{#MyAppName}\*.*"; DestDir: "{app}"; Flags: recursesubdirs ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[UninstallDelete]
Type: filesandordirs; Name: "{userappdata}\{#MyAppName}"

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent; AfterInstall: SetFirewallException;

[CustomMessages]
RBI=Aqic or other Aqic related application (e.g. File Explorer) is running. Close before re-installing.
RBU=Aqic or other Aqic related application (e.g. File Explorer) is running. Close before uninstalling.
BV=Wrong Windows version (64 bits is required).
french.RBI=Aqic ou un autre application relative à Aqic (e.g. Explorateur de fichiers) est en cours d'exécution. Fermer avant de re-installer. 
french.RBU=Aqic ou un autre application relative à Aqic (e.g. Explorateur de fichiers) est en cours d'exécution. Fermer avant de désinstaller.
french.BV=Mauvaise version de Windows (64 bits est requis).
              
[Code]
function InitializeSetup(): Boolean;
var
 handle:Longint;
 cm:String;
Begin
  if (IsWin64) Then
  Begin
    Result := True;
    handle := FindWindowByWindowName ('Aqic');
    if (handle <> 0) Then
    Begin
      cm := CustomMessage('RBI');
      MsgBox(cm, mbError, MB_OK);
      Result := False;
    End
  End
  Else
  Begin
    cm := CustomMessage('BV');	
    MsgBox(cm, mbError, MB_OK);
    Result := False;
  End
End; 

function InitializeUninstall(): Boolean;
var
 handle:Longint;
 cm:String;
Begin
  Result := True;
  handle := FindWindowByWindowName ('Aqic');
  if (handle <> 0) Then
  Begin
    cm := CustomMessage('RBU');
    MsgBox(cm, mbError, MB_OK);
    Result := False;
  End
End;
  
// Utility functions for Inno Setup
// Used to add/remove programs from the windows firewall rules
// Code originally from http://news.jrsoftware.org/news/innosetup/msg43799.html
const
  NET_FW_SCOPE_ALL = 0;
  NET_FW_IP_VERSION_ANY = 2;

procedure SetFirewallException;
var
  FirewallObject:Variant;
  FirewallManager:Variant;
  FirewallProfile:Variant;
  FileName:String;
  AppName:String;
begin
  try
    AppName:=ExpandConstant('{#MyAppName}');
    FileName:=ExpandConstant('{app}\{#MyAppExeName}');
    FirewallObject:=CreateOleObject('HNetCfg.FwAuthorizedApplication');
    FirewallObject.ProcessImageFileName:=FileName;
    FirewallObject.Name:=AppName;
    FirewallObject.Scope:=NET_FW_SCOPE_ALL;
    FirewallObject.IpVersion:=NET_FW_IP_VERSION_ANY;
    FirewallObject.Enabled:=True;
    FirewallManager:=CreateOleObject('HNetCfg.FwMgr');
    FirewallProfile:=FirewallManager.LocalPolicy.CurrentProfile;
    FirewallProfile.AuthorizedApplications.Add(FirewallObject);
  except
  end;
end;

procedure RemoveFirewallException(FileName:string);
var
  FirewallManager:Variant;
  FirewallProfile:Variant;
begin
  try
    FirewallManager:=CreateOleObject('HNetCfg.FwMgr');
    FirewallProfile:=FirewallManager.LocalPolicy.CurrentProfile;
    FireWallProfile.AuthorizedApplications.Remove(FileName);
  except
  end;
end;

const
  cmd = '-NoLogo -Noninteractive -InputFormat none -Command "remove-item -Recurse /users/*/';

procedure Cleanup (folder:string);
var
  args:string;
  resultCode:integer;
begin
  args := cmd + folder + '"';
  Exec('powershell', args, '', SW_HIDE, ewWaitUntilTerminated, resultCode);
end;

procedure CurUninstallStepChanged(CurUninstallStep:TUninstallStep);
var
  Filename:String;
begin
  FileName:=ExpandConstant('{app}\{#MyAppExeName}');
  if CurUninstallStep=usPostUninstall then
  Begin
     RemoveFirewallException(Filename);
  End
  else
  Begin
   if CurUninstallStep=usUninstall then
   Begin
     // Get-ChildItem -name -Recurse /users/*/AppData/Roaming/aqic
     // Get-ChildItem -name -Recurse /users/*/AppData/Local/aqic
     // Get-ChildItem -name -Recurse /users/*/AppData/Local/cache/QtLocation
    Cleanup ('AppData/local/aqic');
    Cleanup ('AppData/Roaming/aqic');
    Cleanup ('AppData/Local/cache/QtLocation');
    Cleanup ('AppData/Local/cache/qtshadercache-x86_64-little_endian-llp64');
   End
  End
end;
